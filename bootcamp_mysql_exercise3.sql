CREATE DATABASE SQL_EX3;

USE SQL_EX3;

CREATE TABLE CUSTOMER (
	ID INTEGER PRIMARY KEY,
    CUSTOMER_NAME VARCHAR(255) NOT NULL,
    CITY_ID INTEGER NOT NULL,
    CUSTOMER_ADDRESS VARCHAR(255) NOT NULL,
    CONTACT_PERSON VARCHAR(255),
    EMAIL VARCHAR(128) NOT NULL,
    PHONE VARCHAR(128) NOT NULL
);

CREATE TABLE PRODUCT (
	ID INTEGER PRIMARY KEY,
    SKU VARCHAR(32) NOT NULL,
    PRODUCT_NAME VARCHAR(128) NOT NULL,
    PRODUCT_DESCRIPTION TEXT NOT NULL,
    CURRENT_PRICE DECIMAL(8,2) NOT NULL,
    QUANTITY_IN_STOCK INTEGER NOT NULL
);

CREATE TABLE INVOICE (
	ID INTEGER PRIMARY KEY,
	INVOICE_NUMBER VARCHAR(255) NOT NULL,
    CUSTOMER_ID INTEGER NOT NULL,
    USER_ACCOUNT_ID INTEGER NOT NULL,
    TOTAL_PRICE DECIMAL(8,2) NOT NULL,
    TIME_ISSUED VARCHAR(255),
    TIME_DUE VARCHAR(255),
    TIME_PAID VARCHAR(255),
    TIME_CANCELED VARCHAR(255),
    TIME_REFUNDED VARCHAR(255),
    FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMER (ID)
);

CREATE TABLE INVOICE_ITEM (
	ID INTEGER PRIMARY KEY,
    INVOICE_ID INTEGER,
    PRODUCT_ID INTEGER,
    QUANTITY INTEGER NOT NULL,
    PRICE DECIMAL(8,2) NOT NULL,
    LINE_TOTAL_PRICE DECIMAL(8,2) NOT NULL,
    FOREIGN KEY (INVOICE_ID) REFERENCES INVOICE (ID),
    FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCT (ID)
);

-- Question 1b
DELETE FROM CUSTOMER;
SELECT * FROM CUSTOMER;

INSERT INTO CUSTOMER VALUES
	(1, 'Drogerie Wien', 1, 'Deckergasse 15A', 'Emil Steinbach', 'abc@gmail.com', 123455678),
	(2, 'John', 4, 'Deckergasse lA', 'upper', 'abck@gmail.com', 12345567),
	(3, 'Mary', 8, 'Deckergasse 18A', '9upper', 'abcd@gmail.com', 1234556789);

DELETE FROM PRODUCT;
SELECT * FROM PRODUCT;
INSERT INTO PRODUCT VALUES
	(1, '330120', '9UP PRODUCT', 'COMPLETELY 9UP', 60, 122),
	(2, '330121', '9UPPER PRODUCT', 'COMPLETELY 9UPPER', 50, 50),
	(3, '330122', '9UPPER PRODUCTS', 'SUPER 9UPPER', 40, 600),
	(4, '330123', '9UPPER PRODUCTSS', 'SUPER COMPLETELY UPPER', 30, 500);

DELETE FROM INVOICE;
SELECT * FROM INVOICE;
INSERT INTO INVOICE VALUES
	(1, 123456780, 2, 41, 1423, NULL, NULL, NULL, NULL, NULL),
	(2, 123456780, 3, 42, 1400, NULL, NULL, NULL, NULL, NULL),
	(3, 123456780, 2, 43, 17000, NULL, NULL, NULL, NULL, NULL);

DELETE FROM INVOICE_ITEM;
INSERT INTO INVOICE_ITEM VALUES
	(1, 1, 1, 40, 23, 920),
	(2, 1, 2, 4, 20, 80),
	(3, 1, 3, 4, 10, 40),
	(4, 1, 2, 4, 30, 120);

-- Question 1c
SELECT 'CUSTOMER' AS CATEGORY, C.ID AS ID, C.CUSTOMER_NAME AS NAME
FROM CUSTOMER C
WHERE NOT EXISTS (SELECT 1 FROM INVOICE I WHERE C.ID = I.CUSTOMER_ID)
UNION
SELECT 'PRODUCT' AS CATEGORY, P.ID AS ID, P.PRODUCT_NAME AS NAME
FROM PRODUCT P
WHERE NOT EXISTS (SELECT 1 FROM INVOICE_ITEM I WHERE P.ID = I.PRODUCT_ID);

-- Question 2
-- DROP TABLE EMPLOYEE;
CREATE TABLE EMPLOYEE (
ID INTEGER NOT NULL AUTO_INCREMENT PRIMARY KEY,
EMPLOYEE_NAME VARCHAR(30) NOT NULL,
SALARY NUMERIC(8,2),
PHONE NUMERIC(15),
EMAIL VARCHAR(50),
DEPT_ID INTEGER NOT NULL
);

-- DROP TABLE DEPARTMENT;
CREATE TABLE DEPARTMENT (
ID INTEGER NOT NULL AUTO_INCREMENT PRIMARY KEY,
DEPT_CODE VARCHAR(3) NOT NULL,
DEPT_NAME VARCHAR(200) NOT NULL
);

-- Question 2a

DELETE FROM EMPLOYEE;
INSERT INTO EMPLOYEE VALUES (1, 'JOHN', 20000, 90234567, 'JOHN@GMAIL.COM', 1);
INSERT INTO EMPLOYEE VALUES (2, 'MARY', 10000, 90234561, 'MARY@GMAIL.COM', 1);
INSERT INTO EMPLOYEE VALUES (3, 'STEVE', 30000, 90234562, 'STEVE@GMAIL.COM', 3);
INSERT INTO EMPLOYEE VALUES (4, 'SUNNY', 40000, 90234563, 'SUNNY@GMAIL.COM', 4);

DELETE FROM DEPARTMENT;
INSERT INTO DEPARTMENT VALUES (1, 'HR', 'HUMAN RESOURCES');
INSERT INTO DEPARTMENT VALUES (2, '9UP', '9UP DEPARTMENT');
INSERT INTO DEPARTMENT VALUES (3, 'SA', 'SALES DEPARTMENT');
INSERT INTO DEPARTMENT VALUES (4, 'IT', 'INFORMATION TECHNOLOGY DEPARTMENT');

SELECT D.DEPT_CODE, COUNT(E.ID) AS NUM_OF_EMPLOYEE
FROM DEPARTMENT D LEFT JOIN EMPLOYEE E
ON D.ID = E.DEPT_ID
GROUP BY D.DEPT_CODE
ORDER BY COUNT(E.ID) DESC;

-- Question 2b
SELECT * FROM DEPARTMENT;
SELECT * FROM EMPLOYEE;
DELETE FROM DEPARTMENT WHERE ID = 5;
INSERT INTO DEPARTMENT VALUES (5, 'IT', 'INFORMATION TECHNOLOGY DEPARTMENT');
-- ANS: My SQL in 2a is still working because the SQL group the result by dept_code instead of department.id.
-- The result is the same as not yet insert the above data.
