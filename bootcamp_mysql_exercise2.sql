CREATE DATABASE ORG;

SHOW DATABASES;

USE ORG;

CREATE TABLE WORKER(
	WORKER_ID INTEGER PRIMARY KEY AUTO_INCREMENT,
    FIRST_NAME CHAR(25),
    LAST_NAME CHAR(25),
    SALARY NUMERIC(15),
    JOINING_DATE DATETIME,
    DEPARTMENT CHAR(25)
);

INSERT INTO WORKER (FIRST_NAME, LAST_NAME, SALARY, JOINING_DATE, DEPARTMENT) VALUES
	('Monika', 'Arora', 100000, '21-02-20 09:00:00', 'HR'),
    ('Niharika', 'Verma', 80000, '21-06-11 09:00:00', 'Admin'),
    ('Vishal', 'Singhal', 300000, '21-02-20 09:00:00', 'HR'),
    ('Mohan', 'Sarah', 300000, '21-03-19 09:00:00', 'Admin'),
    ('Amitabh', 'Singh', 500000, '21-02-20 09:00:00', 'Admin'),
    ('Vivek', 'Bhati', 490000, '21-06-11 09:00:00', 'Admin'),
    ('Vipul', 'Diwan', 200000, '21-06-11 09:00:00', 'Account'),
    ('Satish', 'Kumar', 75000, '21-01-20 09:00:00','Account'),
    ('Geetika', 'Chauhan', 90000, '21-04-11 09:00:00','Admin');

CREATE TABLE BONUS(
	WORKER_REF_ID INTEGER,
    BONUS_AMOUNT NUMERIC(10),
    BONUS_DATE DATETIME,
    FOREIGN KEY (WORKER_REF_ID) REFERENCES WORKER(WORKER_ID)
);

SELECT * FROM WORKER;

-- TASK 1: INSERT DATA INTO TABLE BONUS
INSERT INTO BONUS VALUES
	(6, 32000, '21-11-02 09:00:00'),
    (6, 20000, '22-11-02 09:00:00'),
    (5, 21000, '21-11-02 09:00:00'),
    (9, 30000, '21-11-02 09:00:00'),
    (8, 4500, '22-11-02 09:00:00');
    
-- TASK 2: WRITE AN SQL QUERY TO SHOW THE SECOND HIGHEST SALARY AMONG ALL WORKERS
SELECT SALARY
FROM WORKER
ORDER BY SALARY DESC
LIMIT 1 OFFSET 1;

-- TASK 3: WRITE AN SQL QUERY TO PRINT THE NAME OF EMPLOYEES HAVING THE HIGHEST SALARY IN EACH DEPARTMENT
WITH DEPT_HIGHEST AS(
SELECT DEPARTMENT, MAX(SALARY) AS SALARY FROM WORKER GROUP BY DEPARTMENT
)
SELECT W.DEPARTMENT, CONCAT(FIRST_NAME, ' ', LAST_NAME) AS WORKER_NAME
FROM DEPT_HIGHEST D, WORKER W
WHERE D.DEPARTMENT = W.DEPARTMENT
AND D.SALARY = W.SALARY;

-- TASK 4: WRITE AN SQL QUERY TO FETCH THE LIST OF EMPLOYEES WITH THE SAME SALARY
SELECT CONCAT(W1.FIRST_NAME,' ',W1.LAST_NAME) AS WORKER_NAME
FROM WORKER W1, WORKER W2
WHERE W1.SALARY = W2.SALARY
AND W1.FIRST_NAME <> W2.FIRST_NAME
AND W1.LAST_NAME <> W2.LAST_NAME;

-- TASK 5: WRITE AN SQL QUERY TO FIND THE WORKER NAMES WITH SALARIES + BONUS IN 2021
SELECT CONCAT(W.FIRST_NAME,' ',W.LAST_NAME) AS WORKER_NAME
FROM WORKER W, BONUS B
WHERE W.WORKER_ID = B.WORKER_REF_ID
AND YEAR(B.BONUS_DATE) = '2021';

-- TASK 6: TRY TO DELETE ALL THE RECORDS IN TABLE WORKER, STUDY THE REASON WHY THE DATA CANNOT BE DELETED
TRUNCATE TABLE WORKER;
-- THE TABLE IS REFERENCED BY FOREIGN KEY IN BONUS WHICH CONSIST OF RECORDS.

-- TASK 7: TRY TO DROP TABLE WORKER, STUDY THE REASON WHY THE TABLE CANNOT BE DELETED
DROP TABLE WORKER;
-- THE TABLE IS REFERENCED BY FOREIGN KEY IN BONUS WHICH CONSIST OF RECORDS.
